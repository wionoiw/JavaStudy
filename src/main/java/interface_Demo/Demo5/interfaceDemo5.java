package interface_Demo.Demo5;

/**
 * @Author HHH
 * @Date 2025/4/9 18:35
 * @Day Day13·
 */

//设计模式(Design pattern)
//  设计模式是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结
//  使用设计模式是为了可重用代码、使代码更容易被他人理解、保证代码可靠性、程序的重用性

//当一个接口中抽象方法过多,但是仅使用其中一部分的时候,就可以适配器设计模式

//书写步骤:
//  编写中间类XXXAdapter(XXX为接口名),实现对应的接口
//  ,对接口中的抽象方法进行空实现，让真正的实现类继承中间类,并重写需要用的方法
//  为了避免其他类创建适配器类的对象,中间的适配器类用abstract进行修饰
public class interfaceDemo5 {
}
